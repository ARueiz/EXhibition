
@{
    ViewBag.Title = "Index";
}

@section styles{
    <style>
        .imgBox {
            position: relative;
            text-align: left;
            color: white;
        }

        .tags {
            display: inline-block;
            margin: 3px;
            background-color: transparent;
            color: gray;
            border: none
        }

        .tags:focus {
            color:blue !important;

        }

        section {
            margin-left:3rem;
        }
    </style>
}

<!-- !PAGE CONTENT! -->
<div class="container-fluid m8  mt-4" id="contain">

    <div class="row mb-5 justify-content-around">
        <section class="col-md-2">
            <h4 class="w3-margin">偏好搜尋</h4>
            <div class="border d-none d-md-block">
                <div class="p-3">
                    <h4>類型選擇</h4>
                    <div v-for="element in exhibitionType">
                        <input class="form-check-input" type="checkbox" v-model="selectType" :value="element.tagName" :id="element.tagName">
                        <label class="form-check-label" :for="element.tagName">{{ element.tagName }}</label>
                    </div>
                    <br>
                    <h4>日期選擇</h4>
                    <div class="d-block m-2">
                        <label for="startDate">開始日期</label> <input v-model="selectStartDate" id="startDate" type="date">
                    </div>
                    <div class="d-block m-2">
                        <label for="endDate">結束日期</label> <input v-model="selectEndDate" id="endDate" type="date">
                    </div>
                    <br>
                    <button class="btn btn-success" v-on:click="selectSearch()">查詢</button>
                </div>
            </div>
        </section>

        <main class="col-md-8 mx-auto">
            <h3 class="w3-margin">展覽列表</h3>
            <div class="row" style="padding: 0px 30px">
                <div class="d-inline-block" style="width: 90%;box-sizing: border-box">
                    <input v-model="keyword" type="text" class="w-100">
                    <div style="display:flex">
                        <button class="tags" v-for="i in tags" v-on:click="clickShowEvent(i)">#{{i}}</button>
                    </div>
                </div>
                <button v-on:click="keyWordSearch()" class="d-inline-block btn btn-outline-info d-flex align-items-center justify-content-center" style="width: 10%;box-sizing: border-box;height: 28px">
                    <i style="height: 100%" class="fa-solid fa-magnifying-glass"></i>
                </button>
            </div>
            <!--            <h3 class="w3-margin">展覽列表</h3>-->
            <div class="w3-row-padding pt-4">
                <!-- exhibition list start -->
                <div class="w3-third w3-container mb-5 " v-for="element in exhibitionList">
                    <div class="imgBox">
                        <img :src="element.image" alt="Norway" style="width:100%;min-height: 200px;max-height:200px;" class="">
                    </div>
                    <div class="w3-container w3-white mt-3">
                        <h3 class="" style="text-overflow: ellipsis; overflow: hidden; white-space: nowrap;">{{ element.name }}</h3>
                        <p>
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                 class="bi bi-calendar3" viewBox="0 0 16 16">
                                <path d="M14 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM1 3.857C1 3.384 1.448 3 2 3h12c.552 0 1 .384 1 .857v10.286c0 .473-.448.857-1 .857H2c-.552 0-1-.384-1-.857V3.857z" />
                                <path d="M6.5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2z" />
                            </svg>
                            {{ element.startdate }} ~ {{ element.enddate }}
                        </p>
                        <p style="height: 30px;text-overflow: ellipsis; overflow: hidden; white-space: nowrap;">
                            {{ element.eventinfo }}
                        </p>
                        <a :href="'/shop/product/'+element.EVID" class="w3-button w3-black">更多資訊 or 購票</a>
                    </div>
                </div>
                <!-- exhibition list end -->
            </div>
            <div class="d-flex justify-content-end">
                <button v-on:click="previousPage()" class="btn btn-outline-dark">上一頁</button>
                <button v-on:click="nextPage()" class="btn btn-outline-dark">下一頁</button>
            </div>
            
        </main>
    </div>
</div>


<script>
    new Vue({
        el: '#contain',
        data() {
            return {
                exhibitionList: [],
                exhibitionType: [],
                selectType: [],
                pageNum: 1,
                tags: [],
                selectStartDate: '',
                selectEndDate: '',
                keyword: '',
                searchState : ''
            }
        },
        created: function () {
            this.getDefaultTagList();
            this.getTicket();
            this.hotTagTicket();
        },
        methods: {
            getTicket() {
                const self = this;
                axios.get('/api/ShopApi/GetTicketList/' + self.pageNum)
                    .then(function (response) {
                        return response.data
                    }).then(function (response) {
                        self.exhibitionList = response
                        self.arrayFilter()
                    })
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            },
            getDefaultTagList() {
                const self = this;
                axios.get('/api/ShopApi/GetDefaultTag/')
                    .then(function (response) {
                        self.exhibitionType = response.data
                    
                    })
            },
            hotTagTicket() {
                const self = this;
                axios.get('/api/ShopApi/Gettop5Tag/')
                    .then(function (response) {
                        self.tags = response.data
                    
                    })
            },
            arrayFilter() {
                for (var i = 0; i < this.exhibitionList.length; i++) {
                    let item = this.exhibitionList[i]
                    item.startdate = item.startdate.slice(0, 10);
                    item.enddate = item.enddate.slice(0, 10);
                }
            },
            clickShowEvent(da) {
                var self = this; 
                var data = {
                    tagName : da 
                }
                axios.post('/api/ShopApi/PostTest/', data ).then(function (res) {
                    self.exhibitionList = res.data;
                    self.arrayFilter()
                })
            },
            selectSearch() {

                let self = this

                let data = {
                    CheckTag: this.selectType,
                    StartDate: this.selectStartDate,
                    EndDate: this.selectEndDate
                }

                axios.post('/api/ShopApi/PostSelectSearch', data).then(function (res) {
                    self.exhibitionList = res.data;
                    self.arrayFilter()
                })
            },
            keyWordSearch() {

                if (this.keyword == "") {
                    this.getTicket();
                    return;
                }

                let self = this
                const url = '/api/ShopApi/GetSearchTicketList/?searchStr=' + self.keyword + '&page=' + self.pageNum
                axios.get(url).then(function (res) {
                    self.exhibitionList = res.data;
                    self.arrayFilter()
                })
            },
            previousPage() {
                if (this.pageNum - 1 > 0) {
                    this.pageNum = this.pageNum - 1;
                }
                this.getTicket();
            },
            nextPage() {                
                this.pageNum = this.pageNum + 1;
                this.getTicket();
            }
        },
        

        // .toISOString().split('T')[0]
    })
</script>

